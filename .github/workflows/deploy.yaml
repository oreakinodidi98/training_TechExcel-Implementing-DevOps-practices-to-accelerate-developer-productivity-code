  # We only want to run this script manually.
  on:
    workflow_dispatch

  # Environment variables are defined in an "env" section.
  # We set the target environment to dev.
  # Open the deploy-advanced.yml file to see how we can accept user input
  # instead of needing to change this file to switch environments.
  env:
    targetEnv: dev
    ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
    ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
    ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
    RESOURCEGROUPNAME: ${{ secrets.RESOURCEGROUPNAME }}
  
  permissions:
    contents: read
    id-token: write
    pages: write

  # The overall workflow name will be Azure Bicep. This will show up in the
  # GitHub Action page.
  name: Azure Bicep
  jobs:
    # This script has one job: build and deploy the IaC resources
    build-and-deploy:
      # We run this on an Ubuntu-based GitHub hosted runner. This hosted runner has certain software already installed, including az cli
      runs-on: ubuntu-latest
      steps:
      # Check out the code. This grabs code from the repository and makes it available to the GitHub hosted runner. It will usually be the first task for any workflow
      - uses: actions/checkout@main

        # Log into Azure using a federated credential. We have already set up the federation process in a prior step, so we need to pass in the following
      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{secrets.ARM_SUBSCRIPTION_ID}}
          enable-AzPSSession: true

        # Deploy ARM template
      - name: Run ARM deploy
        uses: azure/arm-deploy@v1
        with:
          scope: /subscriptions/${{secrets.ARM_SUBSCRIPTION_ID}}/resourceGroups/${{ secrets.RESOURCEGROUPNAME }}
          subscriptionId: ${{secrets.ARM_SUBSCRIPTION_ID}}
          resourceGroupName: ${{ secrets.RESOURCEGROUPNAME }}
          template: ./InfrastructureAsCode/main.bicep
          parameters: ${{env.targetEnv}}
